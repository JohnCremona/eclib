
Matrix package test program.

Enter size of a square matrix A: Enter entries of A: A = 
[[1,2],
[3,4]]
Using A.output(cout): 
[[1,2],
[3,4]]
Using A.output_pari(cout): 
[1,2;3,4]
Using A.output_pretty(cout): 
[1 2]
[3 4]
Enter a filename for matrix binary output: Matrix dumped to file 1
Matrix reread from file 1
B = 
[[1,2],
[3,4]]
agree
Enter any number Creating an array of 3 matrices
 A=
[[1,2],
[3,4]]
2A=
[[2,4],
[6,8]]
3A=
[[3,6],
[9,12]]
row(A,1) = [1,2]
row(A,2) = [3,4]
A = 
[[1,2],
[3,4]]
col(A,1) = [1,3]
col(A,2) = [2,4]
A = 
[[1,2],
[3,4]]
directsum(A,A) = 
[[1,2,0,0],
[3,4,0,0],
[0,0,1,2],
[0,0,3,4]]
Enter any number B = A = 
[[1,2],
[3,4]]
Enter any number B==A?1
B!=A?0
after B+:=A, A = 
[[1,2],
[3,4]]
and B = 
[[2,4],
[6,8]]
Enter any number after B-:=A, A = 
[[1,2],
[3,4]]
and B = 
[[1,2],
[3,4]]
Enter any number after B*:=2, A = 
[[1,2],
[3,4]]
and B = 
[[2,4],
[6,8]]
Enter any number after B/:=2, A = 
[[1,2],
[3,4]]
and B = 
[[1,2],
[3,4]]
Enter any number A+B=
[[2,4],
[6,8]]
Now A = 
[[1,2],
[3,4]]
and B = 
[[1,2],
[3,4]]
Enter any number A-B=
[[0,0],
[0,0]]
Now A = 
[[1,2],
[3,4]]
and B = 
[[1,2],
[3,4]]
Enter any number A*B=
[[7,10],
[15,22]]
Now A = 
[[1,2],
[3,4]]
and B = 
[[1,2],
[3,4]]
Enter any number -A=
[[-1,-2],
[-3,-4]]
Now A = 
[[1,2],
[3,4]]
-A=
[[-1,-2],
[-3,-4]]
Now A = 
[[1,2],
[3,4]]
Enter any number char. poly. of A has coefficients [ -2 -5 1 ]
det(A) = -2
Augmented matrix = 
[[1,2,1,0],
[3,4,0,1]]

Which echelon method? (0=standard,1=longlong,2=modular) 
Using method 0
Echelon matrix = 
[[2,0,-4,2],
[0,2,3,-1]]
pivotal columns: [1,2]
nonpivotal columns: [3,4]
Denom = 2
Rank = 2
Nullity = 0
A has inverse (1/2)*
[[-4,2],
[3,-1]]
Check: A.A^(-1) = I ? True!
