# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@ALLPROGS_FALSE@bin_PROGRAMS = mwrank$(EXEEXT)
@ALLPROGS_TRUE@bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) \
@ALLPROGS_TRUE@	$(am__EXEEXT_3) $(am__EXEEXT_4)
subdir = progs
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = solve_conic$(EXEEXT) solve_legendre$(EXEEXT) \
	reduce_cubics$(EXEEXT) list_cubics$(EXEEXT)
am__EXEEXT_2 = point_search$(EXEEXT) indep_test$(EXEEXT)
am__EXEEXT_3 = mwrank$(EXEEXT) reduce_quartics$(EXEEXT) \
	quartic_points$(EXEEXT)
am__EXEEXT_4 = h1bsd$(EXEEXT) h1curve$(EXEEXT) pcurve$(EXEEXT) \
	nfhpcurve$(EXEEXT) nfhpmcurve$(EXEEXT) h1clist$(EXEEXT) \
	checkap$(EXEEXT) h1bsdcurisog$(EXEEXT) nfcount$(EXEEXT) \
	ecnf$(EXEEXT) h1first$(EXEEXT) moreap$(EXEEXT) qexp$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_checkap_OBJECTS = checkap.$(OBJEXT)
checkap_OBJECTS = $(am_checkap_OBJECTS)
checkap_LDADD = $(LDADD)
am_ecnf_OBJECTS = ecnf.$(OBJEXT)
ecnf_OBJECTS = $(am_ecnf_OBJECTS)
ecnf_LDADD = $(LDADD)
am_h1bsd_OBJECTS = h1bsd.$(OBJEXT)
h1bsd_OBJECTS = $(am_h1bsd_OBJECTS)
h1bsd_LDADD = $(LDADD)
am_h1bsdcurisog_OBJECTS = h1bsdcurisog.$(OBJEXT)
h1bsdcurisog_OBJECTS = $(am_h1bsdcurisog_OBJECTS)
h1bsdcurisog_LDADD = $(LDADD)
am_h1clist_OBJECTS = h1clist.$(OBJEXT)
h1clist_OBJECTS = $(am_h1clist_OBJECTS)
h1clist_LDADD = $(LDADD)
am_h1curve_OBJECTS = h1curve.$(OBJEXT)
h1curve_OBJECTS = $(am_h1curve_OBJECTS)
h1curve_LDADD = $(LDADD)
am_h1first_OBJECTS = h1first.$(OBJEXT)
h1first_OBJECTS = $(am_h1first_OBJECTS)
h1first_LDADD = $(LDADD)
am_indep_test_OBJECTS = indep_test.$(OBJEXT)
indep_test_OBJECTS = $(am_indep_test_OBJECTS)
indep_test_LDADD = $(LDADD)
am_list_cubics_OBJECTS = list_cubics.$(OBJEXT)
list_cubics_OBJECTS = $(am_list_cubics_OBJECTS)
list_cubics_LDADD = $(LDADD)
am_moreap_OBJECTS = moreap.$(OBJEXT)
moreap_OBJECTS = $(am_moreap_OBJECTS)
moreap_LDADD = $(LDADD)
am_mwrank_OBJECTS = mwrank.$(OBJEXT)
mwrank_OBJECTS = $(am_mwrank_OBJECTS)
mwrank_LDADD = $(LDADD)
am_nfcount_OBJECTS = nfcount.$(OBJEXT)
nfcount_OBJECTS = $(am_nfcount_OBJECTS)
nfcount_LDADD = $(LDADD)
am_nfhpcurve_OBJECTS = nfhpcurve.$(OBJEXT)
nfhpcurve_OBJECTS = $(am_nfhpcurve_OBJECTS)
nfhpcurve_LDADD = $(LDADD)
am_nfhpmcurve_OBJECTS = nfhpmcurve.$(OBJEXT)
nfhpmcurve_OBJECTS = $(am_nfhpmcurve_OBJECTS)
nfhpmcurve_LDADD = $(LDADD)
am_pcurve_OBJECTS = pcurve.$(OBJEXT)
pcurve_OBJECTS = $(am_pcurve_OBJECTS)
pcurve_LDADD = $(LDADD)
am_point_search_OBJECTS = point_search.$(OBJEXT)
point_search_OBJECTS = $(am_point_search_OBJECTS)
point_search_LDADD = $(LDADD)
am_qexp_OBJECTS = qexp.$(OBJEXT)
qexp_OBJECTS = $(am_qexp_OBJECTS)
qexp_LDADD = $(LDADD)
am_quartic_points_OBJECTS = quartic_points.$(OBJEXT)
quartic_points_OBJECTS = $(am_quartic_points_OBJECTS)
quartic_points_LDADD = $(LDADD)
am_reduce_cubics_OBJECTS = reduce_cubics.$(OBJEXT)
reduce_cubics_OBJECTS = $(am_reduce_cubics_OBJECTS)
reduce_cubics_LDADD = $(LDADD)
am_reduce_quartics_OBJECTS = reduce_quartics.$(OBJEXT)
reduce_quartics_OBJECTS = $(am_reduce_quartics_OBJECTS)
reduce_quartics_LDADD = $(LDADD)
am_solve_conic_OBJECTS = solve_conic.$(OBJEXT)
solve_conic_OBJECTS = $(am_solve_conic_OBJECTS)
solve_conic_LDADD = $(LDADD)
am_solve_legendre_OBJECTS = solve_legendre.$(OBJEXT)
solve_legendre_OBJECTS = $(am_solve_legendre_OBJECTS)
solve_legendre_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(checkap_SOURCES) $(ecnf_SOURCES) $(h1bsd_SOURCES) \
	$(h1bsdcurisog_SOURCES) $(h1clist_SOURCES) $(h1curve_SOURCES) \
	$(h1first_SOURCES) $(indep_test_SOURCES) \
	$(list_cubics_SOURCES) $(moreap_SOURCES) $(mwrank_SOURCES) \
	$(nfcount_SOURCES) $(nfhpcurve_SOURCES) $(nfhpmcurve_SOURCES) \
	$(pcurve_SOURCES) $(point_search_SOURCES) $(qexp_SOURCES) \
	$(quartic_points_SOURCES) $(reduce_cubics_SOURCES) \
	$(reduce_quartics_SOURCES) $(solve_conic_SOURCES) \
	$(solve_legendre_SOURCES)
DIST_SOURCES = $(checkap_SOURCES) $(ecnf_SOURCES) $(h1bsd_SOURCES) \
	$(h1bsdcurisog_SOURCES) $(h1clist_SOURCES) $(h1curve_SOURCES) \
	$(h1first_SOURCES) $(indep_test_SOURCES) \
	$(list_cubics_SOURCES) $(moreap_SOURCES) $(mwrank_SOURCES) \
	$(nfcount_SOURCES) $(nfhpcurve_SOURCES) $(nfhpmcurve_SOURCES) \
	$(pcurve_SOURCES) $(point_search_SOURCES) $(qexp_SOURCES) \
	$(quartic_points_SOURCES) $(reduce_cubics_SOURCES) \
	$(reduce_quartics_SOURCES) $(solve_conic_SOURCES) \
	$(solve_legendre_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AM_CXXFLAGS = @AM_CXXFLAGS@
AM_LDFLAGS = -ljc -L$(top_builddir)/libsrc $(NTL_LIBS) $(PARI_LIBS)
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
NTL_CFLAGS = @NTL_CFLAGS@
NTL_LIBS = @NTL_LIBS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PARI_CFLAGS = @PARI_CFLAGS@
PARI_LIBS = @PARI_LIBS@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = -I$(top_srcdir)/libsrc $(NTL_CFLAGS) $(PARI_CFLAGS)
test_input_dir = $(srcdir)/in
test_output_dir = $(srcdir)/out

################ PROCS (conics & cubics programs) #################
PROCS_PROGS = solve_conic solve_legendre reduce_cubics list_cubics
solve_conic_SOURCES = solve_conic.cc
solve_legendre_SOURCES = solve_legendre.cc
reduce_cubics_SOURCES = reduce_cubics.cc
list_cubics_SOURCES = list_cubics.cc

################ QCURVES (elliptic curves programs, excluding two-descent) #################
QCURVES_PROGS = point_search indep_test
point_search_SOURCES = point_search.cc
indep_test_SOURCES = indep_test.cc

################ QCURVES (elliptic curves two-descent programs) #################
QRANK_PROGS = mwrank reduce_quartics quartic_points
mwrank_SOURCES = mwrank.cc
reduce_quartics_SOURCES = reduce_quartics.cc
quartic_points_SOURCES = quartic_points.cc

################ G0N (modular symbols programs) #################
G0N_PROGS = h1bsd h1curve pcurve nfhpcurve nfhpmcurve h1clist checkap h1bsdcurisog nfcount ecnf h1first moreap qexp

# NB aplist, checkgens and tnfd are not currently tested in check_g0n
h1bsd_SOURCES = h1bsd.cc
h1curve_SOURCES = h1curve.cc
pcurve_SOURCES = pcurve.cc
nfhpcurve_SOURCES = nfhpcurve.cc
nfhpmcurve_SOURCES = nfhpmcurve.cc
h1clist_SOURCES = h1clist.cc
checkap_SOURCES = checkap.cc
h1bsdcurisog_SOURCES = h1bsdcurisog.cc
nfcount_SOURCES = nfcount.cc
ecnf_SOURCES = ecnf.cc
h1first_SOURCES = h1first.cc
moreap_SOURCES = moreap.cc
qexp_SOURCES = qexp.cc

# We list here the directories in and out which contain the test input
# and expected output files for the tests run by "make check".
EXTRA_DIST = in out
ACLOCAL_AMFLAGS = -I m4
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu progs/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu progs/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
checkap$(EXEEXT): $(checkap_OBJECTS) $(checkap_DEPENDENCIES) 
	@rm -f checkap$(EXEEXT)
	$(CXXLINK) $(checkap_OBJECTS) $(checkap_LDADD) $(LIBS)
ecnf$(EXEEXT): $(ecnf_OBJECTS) $(ecnf_DEPENDENCIES) 
	@rm -f ecnf$(EXEEXT)
	$(CXXLINK) $(ecnf_OBJECTS) $(ecnf_LDADD) $(LIBS)
h1bsd$(EXEEXT): $(h1bsd_OBJECTS) $(h1bsd_DEPENDENCIES) 
	@rm -f h1bsd$(EXEEXT)
	$(CXXLINK) $(h1bsd_OBJECTS) $(h1bsd_LDADD) $(LIBS)
h1bsdcurisog$(EXEEXT): $(h1bsdcurisog_OBJECTS) $(h1bsdcurisog_DEPENDENCIES) 
	@rm -f h1bsdcurisog$(EXEEXT)
	$(CXXLINK) $(h1bsdcurisog_OBJECTS) $(h1bsdcurisog_LDADD) $(LIBS)
h1clist$(EXEEXT): $(h1clist_OBJECTS) $(h1clist_DEPENDENCIES) 
	@rm -f h1clist$(EXEEXT)
	$(CXXLINK) $(h1clist_OBJECTS) $(h1clist_LDADD) $(LIBS)
h1curve$(EXEEXT): $(h1curve_OBJECTS) $(h1curve_DEPENDENCIES) 
	@rm -f h1curve$(EXEEXT)
	$(CXXLINK) $(h1curve_OBJECTS) $(h1curve_LDADD) $(LIBS)
h1first$(EXEEXT): $(h1first_OBJECTS) $(h1first_DEPENDENCIES) 
	@rm -f h1first$(EXEEXT)
	$(CXXLINK) $(h1first_OBJECTS) $(h1first_LDADD) $(LIBS)
indep_test$(EXEEXT): $(indep_test_OBJECTS) $(indep_test_DEPENDENCIES) 
	@rm -f indep_test$(EXEEXT)
	$(CXXLINK) $(indep_test_OBJECTS) $(indep_test_LDADD) $(LIBS)
list_cubics$(EXEEXT): $(list_cubics_OBJECTS) $(list_cubics_DEPENDENCIES) 
	@rm -f list_cubics$(EXEEXT)
	$(CXXLINK) $(list_cubics_OBJECTS) $(list_cubics_LDADD) $(LIBS)
moreap$(EXEEXT): $(moreap_OBJECTS) $(moreap_DEPENDENCIES) 
	@rm -f moreap$(EXEEXT)
	$(CXXLINK) $(moreap_OBJECTS) $(moreap_LDADD) $(LIBS)
mwrank$(EXEEXT): $(mwrank_OBJECTS) $(mwrank_DEPENDENCIES) 
	@rm -f mwrank$(EXEEXT)
	$(CXXLINK) $(mwrank_OBJECTS) $(mwrank_LDADD) $(LIBS)
nfcount$(EXEEXT): $(nfcount_OBJECTS) $(nfcount_DEPENDENCIES) 
	@rm -f nfcount$(EXEEXT)
	$(CXXLINK) $(nfcount_OBJECTS) $(nfcount_LDADD) $(LIBS)
nfhpcurve$(EXEEXT): $(nfhpcurve_OBJECTS) $(nfhpcurve_DEPENDENCIES) 
	@rm -f nfhpcurve$(EXEEXT)
	$(CXXLINK) $(nfhpcurve_OBJECTS) $(nfhpcurve_LDADD) $(LIBS)
nfhpmcurve$(EXEEXT): $(nfhpmcurve_OBJECTS) $(nfhpmcurve_DEPENDENCIES) 
	@rm -f nfhpmcurve$(EXEEXT)
	$(CXXLINK) $(nfhpmcurve_OBJECTS) $(nfhpmcurve_LDADD) $(LIBS)
pcurve$(EXEEXT): $(pcurve_OBJECTS) $(pcurve_DEPENDENCIES) 
	@rm -f pcurve$(EXEEXT)
	$(CXXLINK) $(pcurve_OBJECTS) $(pcurve_LDADD) $(LIBS)
point_search$(EXEEXT): $(point_search_OBJECTS) $(point_search_DEPENDENCIES) 
	@rm -f point_search$(EXEEXT)
	$(CXXLINK) $(point_search_OBJECTS) $(point_search_LDADD) $(LIBS)
qexp$(EXEEXT): $(qexp_OBJECTS) $(qexp_DEPENDENCIES) 
	@rm -f qexp$(EXEEXT)
	$(CXXLINK) $(qexp_OBJECTS) $(qexp_LDADD) $(LIBS)
quartic_points$(EXEEXT): $(quartic_points_OBJECTS) $(quartic_points_DEPENDENCIES) 
	@rm -f quartic_points$(EXEEXT)
	$(CXXLINK) $(quartic_points_OBJECTS) $(quartic_points_LDADD) $(LIBS)
reduce_cubics$(EXEEXT): $(reduce_cubics_OBJECTS) $(reduce_cubics_DEPENDENCIES) 
	@rm -f reduce_cubics$(EXEEXT)
	$(CXXLINK) $(reduce_cubics_OBJECTS) $(reduce_cubics_LDADD) $(LIBS)
reduce_quartics$(EXEEXT): $(reduce_quartics_OBJECTS) $(reduce_quartics_DEPENDENCIES) 
	@rm -f reduce_quartics$(EXEEXT)
	$(CXXLINK) $(reduce_quartics_OBJECTS) $(reduce_quartics_LDADD) $(LIBS)
solve_conic$(EXEEXT): $(solve_conic_OBJECTS) $(solve_conic_DEPENDENCIES) 
	@rm -f solve_conic$(EXEEXT)
	$(CXXLINK) $(solve_conic_OBJECTS) $(solve_conic_LDADD) $(LIBS)
solve_legendre$(EXEEXT): $(solve_legendre_OBJECTS) $(solve_legendre_DEPENDENCIES) 
	@rm -f solve_legendre$(EXEEXT)
	$(CXXLINK) $(solve_legendre_OBJECTS) $(solve_legendre_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/checkap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecnf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/h1bsd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/h1bsdcurisog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/h1clist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/h1curve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/h1first.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/indep_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/list_cubics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/moreap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mwrank.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nfcount.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nfhpcurve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nfhpmcurve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pcurve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/point_search.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qexp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quartic_points.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reduce_cubics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reduce_quartics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/solve_conic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/solve_legendre.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS

procs_progs: $(PROCS_PROGS)

check_procs: procs_progs
	@echo Checking conics and cubics programs...
	./solve_conic < $(test_input_dir)/solve_conic.in > solve_conic.testout && diff solve_conic.testout $(test_output_dir)/solve_conic.out
	./solve_legendre < $(test_input_dir)/solve_legendre.in > solve_legendre.testout && diff solve_legendre.testout $(test_output_dir)/solve_legendre.out
	./reduce_cubics < $(test_input_dir)/reduce_cubics.in > reduce_cubics.testout && diff reduce_cubics.testout $(test_output_dir)/reduce_cubics$(OBJ_SUF).out
	./list_cubics < $(test_input_dir)/list_cubics.in > list_cubics.testout && diff list_cubics.testout $(test_output_dir)/list_cubics.out
qcurves_progs: $(QCURVES_TESTS)

check_qcurves: qcurves_progs
	@echo Checking qcurves programs...
	./point_search < $(test_input_dir)/point_search.in > point_search.testout 2>/dev/null && diff point_search.testout $(test_output_dir)/point_search.out
	./indep_test < $(test_input_dir)/indep_test.in > indep_test.testout 2>/dev/null && diff indep_test.testout $(test_output_dir)/indep_test.out
qrank_progs: $(QRANK_PROGS)

check_qrank: qrank_progs
	@echo Checking qrank programs...
	./mwrank < $(test_input_dir)/mwrank.in > mwrank.testout 2>/dev/null && diff mwrank.testout $(test_output_dir)/mwrank.out
	./reduce_quartics < $(test_input_dir)/reduce_quartics.in > reduce_quartics.testout 2>/dev/null && diff reduce_quartics.testout $(test_output_dir)/reduce_quartics.out
	./quartic_points < $(test_input_dir)/quartic_points.in > quartic_points.testout 2>/dev/null && diff quartic_points.testout $(test_output_dir)/quartic_points.out
	rm -f PRIMES 1
g0n_progs: $(G0N_PROGS)

# This is the name of a directory which will be used for newform
# input/output in the "make check" tests and removed afterwards.

export NF_DIR:=nftmp

check_g0n:  g0n_progs
	@echo Checking g0n programs...
	rm -rf $(NF_DIR)
	mkdir $(NF_DIR)
	./ecnf < $(test_input_dir)/ecnf.in 2>/dev/null > ecnf.testout && diff ecnf.testout $(test_output_dir)/ecnf.out
	./nfhpcurve < $(test_input_dir)/nfhpcurve.in > nfhpcurve.testout 2>/dev/null && diff nfhpcurve.testout $(test_output_dir)/nfhpcurve.out
	./nfhpmcurve < $(test_input_dir)/nfhpmcurve.in > nfhpmcurve.testout 2>/dev/null && diff nfhpmcurve.testout $(test_output_dir)/nfhpmcurve.out
	./h1first < $(test_input_dir)/h1first.in 2>/dev/null > h1first.testout && diff h1first.testout $(test_output_dir)/h1first.out
	./h1clist < $(test_input_dir)/h1clist.in > h1clist.testout 2>/dev/null && diff h1clist.testout $(test_output_dir)/h1clist.out
	./h1bsdcurisog < $(test_input_dir)/h1bsdcurisog.in > h1bsdcurisog.testout 2>/dev/null && diff h1bsdcurisog.testout $(test_output_dir)/h1bsdcurisog.out
	echo 0 25 1 `seq 50 60` 0 | ./nfhpcurve > /dev/null 2>/dev/null
	./qexp < $(test_input_dir)/qexp.in > qexp.testout 2>/dev/null && diff qexp.testout $(test_output_dir)/qexp.out
	rm -rf $(NF_DIR)

#################################################################################

progs: procs_progs qcurves_progs qrank_progs g0n_progs
all: progs
check: check_procs check_qcurves check_qrank check_g0n
	rm -f *.testout PRIMES 1

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
